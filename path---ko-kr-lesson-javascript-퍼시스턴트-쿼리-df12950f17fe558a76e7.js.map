{"version":3,"sources":["webpack:///path---ko-kr-lesson-javascript-퍼시스턴트-쿼리-df12950f17fe558a76e7.js","webpack:///./.cache/json/ko-kr-lesson-javascript-퍼시스턴트-쿼리.json"],"names":["webpackJsonp","444","module","exports","data","allPostTitles","edges","node","frontmatter","title","lesson","programming_language","chapter","type","fields","slug","postBySlug","html","timeToRead","excerpt","date","tags","pathContext","language"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,QAAUC,MAAQC,aAAeC,MAAA,UAAAC,OAAA,EAAAC,qBAAA,aAAAC,QAAA,EAAAC,KAAA,UAA6FC,QAAWC,KAAA,eAAsBR,MAAQC,aAAeC,MAAA,OAAAC,OAAA,EAAAC,qBAAA,aAAAC,QAAA,EAAAC,KAAA,UAA0FC,QAAWC,KAAA,YAAmBR,MAAQC,aAAeC,MAAA,UAAAC,OAAA,EAAAC,qBAAA,aAAAC,QAAA,EAAAC,KAAA,UAA6FC,QAAWC,KAAA,eAAsBR,MAAQC,aAAeC,MAAA,UAAAC,OAAA,EAAAC,qBAAA,aAAAC,QAAA,EAAAC,KAAA,UAA6FC,QAAWC,KAAA,eAAsBR,MAAQC,aAAeC,MAAA,YAAAC,OAAA,EAAAC,qBAAA,aAAAC,QAAA,EAAAC,KAAA,UAA+FC,QAAWC,KAAA,iBAAwBR,MAAQC,aAAeC,MAAA,aAAAC,OAAA,EAAAC,qBAAA,aAAAC,QAAA,EAAAC,KAAA,UAAgGC,QAAWC,KAAA,iBAAwBR,MAAQC,aAAeC,MAAA,WAAAC,OAAA,EAAAC,qBAAA,aAAAC,QAAA,EAAAC,KAAA,UAA8FC,QAAWC,KAAA,gBAAuBR,MAAQC,aAAeC,MAAA,MAAAC,OAAA,EAAAC,qBAAA,aAAAC,QAAA,EAAAC,KAAA,UAAyFC,QAAWC,KAAA,WAAkBR,MAAQC,aAAeC,MAAA,YAAAC,OAAA,EAAAC,qBAAA,aAAAC,QAAA,EAAAC,KAAA,UAA+FC,QAAWC,KAAA,iBAAwBR,MAAQC,aAAeC,MAAA,qBAAAC,OAAA,EAAAC,qBAAA,aAAAC,QAAA,EAAAC,KAAA,UAAwGC,QAAWC,KAAA,yBAAgCR,MAAQC,aAAeC,MAAA,OAAAC,OAAA,EAAAC,qBAAA,aAAAC,QAAA,EAAAC,KAAA,UAA0FC,QAAWC,KAAA,YAAmBR,MAAQC,aAAeC,MAAA,OAAAC,OAAA,EAAAC,qBAAA,aAAAC,QAAA,EAAAC,KAAA,UAA0FC,QAAWC,KAAA,aAAmBC,YAAeC,KAAA,shVAAsvTC,WAAA,EAAAC,QAAA,IAAAX,aAAouCC,MAAA,WAAAW,KAAA,aAAAT,qBAAA,aAAAU,MAAA,iDAAmIP,QAAWC,KAAA,eAAqBO,aAAgBP,KAAA,YAAAJ,qBAAA,aAAAY,SAAA","file":"path---ko-kr-lesson-javascript-퍼시스턴트-쿼리-df12950f17fe558a76e7.js","sourcesContent":["webpackJsonp([274922230758086],{\n\n/***/ 444:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allPostTitles\":{\"edges\":[{\"node\":{\"frontmatter\":{\"title\":\"인코더/디코더\",\"lesson\":2,\"programming_language\":\"javascript\",\"chapter\":4,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/인코더-디코더\"}}},{\"node\":{\"frontmatter\":{\"title\":\"시작하기\",\"lesson\":2,\"programming_language\":\"javascript\",\"chapter\":1,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/시작하기\"}}},{\"node\":{\"frontmatter\":{\"title\":\"액터 간 통신\",\"lesson\":2,\"programming_language\":\"javascript\",\"chapter\":2,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/액터-간-통신\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Nact 소개\",\"lesson\":1,\"programming_language\":\"javascript\",\"chapter\":1,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/nact-소개\"}}},{\"node\":{\"frontmatter\":{\"title\":\"액터의 계층 구조\",\"lesson\":4,\"programming_language\":\"javascript\",\"chapter\":2,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/액터의-계층-구조\"}}},{\"node\":{\"frontmatter\":{\"title\":\"상태 저장(영속성)\",\"lesson\":1,\"programming_language\":\"javascript\",\"chapter\":3,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/상태-저장-영속성\"}}},{\"node\":{\"frontmatter\":{\"title\":\"퍼시스턴트 쿼리\",\"lesson\":4,\"programming_language\":\"javascript\",\"chapter\":3,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/퍼시스턴트-쿼리\"}}},{\"node\":{\"frontmatter\":{\"title\":\"스냅샷\",\"lesson\":2,\"programming_language\":\"javascript\",\"chapter\":3,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/스냅샷\"}}},{\"node\":{\"frontmatter\":{\"title\":\"상태가 있는 액터\",\"lesson\":1,\"programming_language\":\"javascript\",\"chapter\":2,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/상태가-있는-액터\"}}},{\"node\":{\"frontmatter\":{\"title\":\"관리 감독(Supervision)\",\"lesson\":5,\"programming_language\":\"javascript\",\"chapter\":2,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/관리-감독-supervision\"}}},{\"node\":{\"frontmatter\":{\"title\":\"타임아웃\",\"lesson\":3,\"programming_language\":\"javascript\",\"chapter\":3,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/타임아웃\"}}},{\"node\":{\"frontmatter\":{\"title\":\"질의하기\",\"lesson\":3,\"programming_language\":\"javascript\",\"chapter\":2,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/질의하기\"}}}]},\"postBySlug\":{\"html\":\"<p>저장된 이벤트가 많을 때 스냅샷 기능을 이용하면 액터의 상태를 복원할 때 성능상 이득을 볼 수 있다는 것을 알았습니다. 그런데 어떤 때는 이벤트 목록 자체가 필요할 수 있습니다.</p>\\n<p>예를 들면, 어떤 도메인 엔티티에 변화를 일으키는 트랜잭션 목록을 보고 싶은 때가 있을 수 있습니다. 항상 필요하지는 않지만 그래도 언젠가는 필요할 때가 있습니다. 그런데 만약 이것 때문에 이벤트 목록 자체를 상태로 저장해버린다면, 이벤트 목록까지 포함된 스냅샷이 점점 커져서 비효율적이게 됩니다.(상상해보십시오) 이 문제는 <a href=\\\"https://martinfowler.com/bliki/CQRS.html\\\">CQRS 패턴</a>으로 해결할 수 있습니다.</p>\\n<p><strong>Nact</strong>는 <strong>CQRS</strong>의 경량화된(그러나 강력한) 형태로서 <strong>퍼시스턴트 쿼리</strong> 기능을 제공합니다. 퍼시스턴트 쿼리에는 <strong>퍼시스\\u001c턴트 키</strong>를 입력받아 저장된 이벤트를 메시지 핸들러에 재생하는 함수를 리턴합니다. 이 함수는 Promise에 담긴 결과를 반환합니다. 퍼시스턴트 쿼리는 지연 평가되어(lazy evaluation) 사용할 때 비로소 실행됩니다.<sup id=\\\"fnref-1\\\"><a href=\\\"#fn-1\\\" class=\\\"footnote-ref\\\">1</a></sup> 참조될 때마다 반복적으로 실행되고, 혹시 새 이벤트가 있으면 역시 반영됩니다. 퍼시스턴트 쿼리의 결과와 시퀀스 번호(이벤트가 저장될 때 순서대로 부여되는 번호)는 별도로 설정된 타임아웃 값에 따라서 캐시되고, 또 일정 메시지마다 스냅샷을 저장하도록 할 수 있습니다.</p>\\n<p>아래에서 퍼시스턴트 쿼리를 유용하게 사용하는 실용적인 예를 볼 수 있습니다. 이 예제는 지갑을 간단히 모델링한 것입니다. 액터의 상태에는 현재 잔액, 아이디, 금전 출납 기록에 대한 퍼시스턴트 쿼리 등이 있습니다. 이 예제에서 주목해야 할 것은 <code>encoder</code>와 <code>decoder</code>를 사용한 부분입니다. 이는 액터의 상태가 단지 정적인 데이터가 아니라 퍼시스턴트 쿼리와 같은 동적 데이터를 포함하고 있을 때 필요합니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">transactionsQuery</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>parent<span class=\\\"token punctuation\\\">,</span> id<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n  <span class=\\\"token function\\\">persistentQuery</span><span class=\\\"token punctuation\\\">(</span>    \\n    parent<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">(</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> msg<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>msg<span class=\\\"token punctuation\\\">.</span>type <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'transaction'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span>msg<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">]</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> state\\n      <span class=\\\"token punctuation\\\">}</span>          \\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`wallet</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>id<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">let</span> <span class=\\\"token function-variable function\\\">snapshotDecoder</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>parent<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>json<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    id<span class=\\\"token punctuation\\\">:</span> json<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n    balance<span class=\\\"token punctuation\\\">:</span> json<span class=\\\"token punctuation\\\">.</span>balance\\n    transactions<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">transactionsQuery</span><span class=\\\"token punctuation\\\">(</span>parent<span class=\\\"token punctuation\\\">,</span> json<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">initialState</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">,</span> parent<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>  \\n  balance<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>\\n  id<span class=\\\"token punctuation\\\">:</span>walletId<span class=\\\"token punctuation\\\">,</span>\\n  transactions<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">transactionsQuery</span><span class=\\\"token punctuation\\\">(</span>parent<span class=\\\"token punctuation\\\">,</span> id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>    \\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">let</span> <span class=\\\"token function-variable function\\\">spawnWallet</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>walletId<span class=\\\"token punctuation\\\">,</span> parent<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n  <span class=\\\"token function\\\">spawnPersistent</span><span class=\\\"token punctuation\\\">(</span>\\n    parent<span class=\\\"token punctuation\\\">,</span>        \\n    <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">initialState</span><span class=\\\"token punctuation\\\">(</span>walletId<span class=\\\"token punctuation\\\">,</span> parent<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> msg<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>recovering<span class=\\\"token punctuation\\\">,</span> persist<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>msg<span class=\\\"token punctuation\\\">.</span>type<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'transaction'</span><span class=\\\"token punctuation\\\">:</span>          \\n          <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>recovering<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">persist</span><span class=\\\"token punctuation\\\">(</span>msg<span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n          <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> balance<span class=\\\"token punctuation\\\">:</span> state<span class=\\\"token punctuation\\\">.</span>balance <span class=\\\"token operator\\\">+</span> msg<span class=\\\"token punctuation\\\">.</span>amount <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'get_transactions'</span><span class=\\\"token punctuation\\\">:</span>                    \\n          <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span>msg<span class=\\\"token punctuation\\\">.</span>requestee<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">await</span> state<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">transactions</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token keyword\\\">return</span> state\\n        <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span> \\n          <span class=\\\"token keyword\\\">return</span> state\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`wallet</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>walletId<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n    walletId<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      snapshotDecoder<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">snapshotDecoder</span><span class=\\\"token punctuation\\\">(</span>parent<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>        \\n      snapshotEvery<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">5</span> <span class=\\\"token operator\\\">*</span> messages<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span>    \\n  <span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"퍼시스턴트-액터와-퍼시스턴트-쿼리의-차이점\\\"><a href=\\\"#%ED%8D%BC%EC%8B%9C%EC%8A%A4%ED%84%B4%ED%8A%B8-%EC%95%A1%ED%84%B0%EC%99%80-%ED%8D%BC%EC%8B%9C%EC%8A%A4%ED%84%B4%ED%8A%B8-%EC%BF%BC%EB%A6%AC%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>퍼시스턴트 액터와 퍼시스턴트 쿼리의 차이점</h2>\\n<p>퍼시스턴트 쿼리는 액터와 같은 라이프사이클이 없습니다. 그래서 <code>shutdownAfter</code> 같은 함수도 없습니다. 그러나 퍼시스턴트 쿼리의 결과는 메모리에 캐시될 수 있습니다. 캐시는 <code>cacheDuration</code> 옵션을 사용해서 유효 기간을 제한하지 않으면 지속됩니다.</p>\\n<p>퍼시스턴트 쿼리는 encoder와 decoder를 사용할 수 있습니다. 이 때 퍼시스턴트 액터와 마찬가지로 각각의 결과는 스냅샷으로 저장할 수 있습니다. 다른 점으로, <code>snapshotEvery</code> 속성 외에 <code>snapshotKey</code>도 지정해야 합니다.</p>\",\"timeToRead\":2,\"excerpt\":\"…\",\"frontmatter\":{\"title\":\"퍼시스턴트 쿼리\",\"date\":\"22/03/2019\",\"programming_language\":\"javascript\",\"tags\":[\"getting-started\",\"nact\",\"javascript\",\"nodejs\"]},\"fields\":{\"slug\":\"/퍼시스턴트-쿼리\"}}},\"pathContext\":{\"slug\":\"/퍼시스턴트-쿼리\",\"programming_language\":\"javascript\",\"language\":\"ko_kr\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---ko-kr-lesson-javascript-퍼시스턴트-쿼리-df12950f17fe558a76e7.js","module.exports = {\"data\":{\"allPostTitles\":{\"edges\":[{\"node\":{\"frontmatter\":{\"title\":\"인코더/디코더\",\"lesson\":2,\"programming_language\":\"javascript\",\"chapter\":4,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/인코더-디코더\"}}},{\"node\":{\"frontmatter\":{\"title\":\"시작하기\",\"lesson\":2,\"programming_language\":\"javascript\",\"chapter\":1,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/시작하기\"}}},{\"node\":{\"frontmatter\":{\"title\":\"액터 간 통신\",\"lesson\":2,\"programming_language\":\"javascript\",\"chapter\":2,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/액터-간-통신\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Nact 소개\",\"lesson\":1,\"programming_language\":\"javascript\",\"chapter\":1,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/nact-소개\"}}},{\"node\":{\"frontmatter\":{\"title\":\"액터의 계층 구조\",\"lesson\":4,\"programming_language\":\"javascript\",\"chapter\":2,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/액터의-계층-구조\"}}},{\"node\":{\"frontmatter\":{\"title\":\"상태 저장(영속성)\",\"lesson\":1,\"programming_language\":\"javascript\",\"chapter\":3,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/상태-저장-영속성\"}}},{\"node\":{\"frontmatter\":{\"title\":\"퍼시스턴트 쿼리\",\"lesson\":4,\"programming_language\":\"javascript\",\"chapter\":3,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/퍼시스턴트-쿼리\"}}},{\"node\":{\"frontmatter\":{\"title\":\"스냅샷\",\"lesson\":2,\"programming_language\":\"javascript\",\"chapter\":3,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/스냅샷\"}}},{\"node\":{\"frontmatter\":{\"title\":\"상태가 있는 액터\",\"lesson\":1,\"programming_language\":\"javascript\",\"chapter\":2,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/상태가-있는-액터\"}}},{\"node\":{\"frontmatter\":{\"title\":\"관리 감독(Supervision)\",\"lesson\":5,\"programming_language\":\"javascript\",\"chapter\":2,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/관리-감독-supervision\"}}},{\"node\":{\"frontmatter\":{\"title\":\"타임아웃\",\"lesson\":3,\"programming_language\":\"javascript\",\"chapter\":3,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/타임아웃\"}}},{\"node\":{\"frontmatter\":{\"title\":\"질의하기\",\"lesson\":3,\"programming_language\":\"javascript\",\"chapter\":2,\"type\":\"lesson\"},\"fields\":{\"slug\":\"/질의하기\"}}}]},\"postBySlug\":{\"html\":\"<p>저장된 이벤트가 많을 때 스냅샷 기능을 이용하면 액터의 상태를 복원할 때 성능상 이득을 볼 수 있다는 것을 알았습니다. 그런데 어떤 때는 이벤트 목록 자체가 필요할 수 있습니다.</p>\\n<p>예를 들면, 어떤 도메인 엔티티에 변화를 일으키는 트랜잭션 목록을 보고 싶은 때가 있을 수 있습니다. 항상 필요하지는 않지만 그래도 언젠가는 필요할 때가 있습니다. 그런데 만약 이것 때문에 이벤트 목록 자체를 상태로 저장해버린다면, 이벤트 목록까지 포함된 스냅샷이 점점 커져서 비효율적이게 됩니다.(상상해보십시오) 이 문제는 <a href=\\\"https://martinfowler.com/bliki/CQRS.html\\\">CQRS 패턴</a>으로 해결할 수 있습니다.</p>\\n<p><strong>Nact</strong>는 <strong>CQRS</strong>의 경량화된(그러나 강력한) 형태로서 <strong>퍼시스턴트 쿼리</strong> 기능을 제공합니다. 퍼시스턴트 쿼리에는 <strong>퍼시스\\u001c턴트 키</strong>를 입력받아 저장된 이벤트를 메시지 핸들러에 재생하는 함수를 리턴합니다. 이 함수는 Promise에 담긴 결과를 반환합니다. 퍼시스턴트 쿼리는 지연 평가되어(lazy evaluation) 사용할 때 비로소 실행됩니다.<sup id=\\\"fnref-1\\\"><a href=\\\"#fn-1\\\" class=\\\"footnote-ref\\\">1</a></sup> 참조될 때마다 반복적으로 실행되고, 혹시 새 이벤트가 있으면 역시 반영됩니다. 퍼시스턴트 쿼리의 결과와 시퀀스 번호(이벤트가 저장될 때 순서대로 부여되는 번호)는 별도로 설정된 타임아웃 값에 따라서 캐시되고, 또 일정 메시지마다 스냅샷을 저장하도록 할 수 있습니다.</p>\\n<p>아래에서 퍼시스턴트 쿼리를 유용하게 사용하는 실용적인 예를 볼 수 있습니다. 이 예제는 지갑을 간단히 모델링한 것입니다. 액터의 상태에는 현재 잔액, 아이디, 금전 출납 기록에 대한 퍼시스턴트 쿼리 등이 있습니다. 이 예제에서 주목해야 할 것은 <code>encoder</code>와 <code>decoder</code>를 사용한 부분입니다. 이는 액터의 상태가 단지 정적인 데이터가 아니라 퍼시스턴트 쿼리와 같은 동적 데이터를 포함하고 있을 때 필요합니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">transactionsQuery</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>parent<span class=\\\"token punctuation\\\">,</span> id<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n  <span class=\\\"token function\\\">persistentQuery</span><span class=\\\"token punctuation\\\">(</span>    \\n    parent<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">(</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> msg<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>msg<span class=\\\"token punctuation\\\">.</span>type <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'transaction'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span>msg<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">]</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> state\\n      <span class=\\\"token punctuation\\\">}</span>          \\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`wallet</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>id<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">let</span> <span class=\\\"token function-variable function\\\">snapshotDecoder</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>parent<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>json<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    id<span class=\\\"token punctuation\\\">:</span> json<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n    balance<span class=\\\"token punctuation\\\">:</span> json<span class=\\\"token punctuation\\\">.</span>balance\\n    transactions<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">transactionsQuery</span><span class=\\\"token punctuation\\\">(</span>parent<span class=\\\"token punctuation\\\">,</span> json<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">initialState</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">,</span> parent<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>  \\n  balance<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>\\n  id<span class=\\\"token punctuation\\\">:</span>walletId<span class=\\\"token punctuation\\\">,</span>\\n  transactions<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">transactionsQuery</span><span class=\\\"token punctuation\\\">(</span>parent<span class=\\\"token punctuation\\\">,</span> id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>    \\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">let</span> <span class=\\\"token function-variable function\\\">spawnWallet</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>walletId<span class=\\\"token punctuation\\\">,</span> parent<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n  <span class=\\\"token function\\\">spawnPersistent</span><span class=\\\"token punctuation\\\">(</span>\\n    parent<span class=\\\"token punctuation\\\">,</span>        \\n    <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">initialState</span><span class=\\\"token punctuation\\\">(</span>walletId<span class=\\\"token punctuation\\\">,</span> parent<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> msg<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>recovering<span class=\\\"token punctuation\\\">,</span> persist<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>msg<span class=\\\"token punctuation\\\">.</span>type<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'transaction'</span><span class=\\\"token punctuation\\\">:</span>          \\n          <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>recovering<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">persist</span><span class=\\\"token punctuation\\\">(</span>msg<span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n          <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> balance<span class=\\\"token punctuation\\\">:</span> state<span class=\\\"token punctuation\\\">.</span>balance <span class=\\\"token operator\\\">+</span> msg<span class=\\\"token punctuation\\\">.</span>amount <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'get_transactions'</span><span class=\\\"token punctuation\\\">:</span>                    \\n          <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span>msg<span class=\\\"token punctuation\\\">.</span>requestee<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">await</span> state<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">transactions</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token keyword\\\">return</span> state\\n        <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span> \\n          <span class=\\\"token keyword\\\">return</span> state\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`wallet</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>walletId<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n    walletId<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      snapshotDecoder<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">snapshotDecoder</span><span class=\\\"token punctuation\\\">(</span>parent<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>        \\n      snapshotEvery<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">5</span> <span class=\\\"token operator\\\">*</span> messages<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span>    \\n  <span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"퍼시스턴트-액터와-퍼시스턴트-쿼리의-차이점\\\"><a href=\\\"#%ED%8D%BC%EC%8B%9C%EC%8A%A4%ED%84%B4%ED%8A%B8-%EC%95%A1%ED%84%B0%EC%99%80-%ED%8D%BC%EC%8B%9C%EC%8A%A4%ED%84%B4%ED%8A%B8-%EC%BF%BC%EB%A6%AC%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>퍼시스턴트 액터와 퍼시스턴트 쿼리의 차이점</h2>\\n<p>퍼시스턴트 쿼리는 액터와 같은 라이프사이클이 없습니다. 그래서 <code>shutdownAfter</code> 같은 함수도 없습니다. 그러나 퍼시스턴트 쿼리의 결과는 메모리에 캐시될 수 있습니다. 캐시는 <code>cacheDuration</code> 옵션을 사용해서 유효 기간을 제한하지 않으면 지속됩니다.</p>\\n<p>퍼시스턴트 쿼리는 encoder와 decoder를 사용할 수 있습니다. 이 때 퍼시스턴트 액터와 마찬가지로 각각의 결과는 스냅샷으로 저장할 수 있습니다. 다른 점으로, <code>snapshotEvery</code> 속성 외에 <code>snapshotKey</code>도 지정해야 합니다.</p>\",\"timeToRead\":2,\"excerpt\":\"…\",\"frontmatter\":{\"title\":\"퍼시스턴트 쿼리\",\"date\":\"22/03/2019\",\"programming_language\":\"javascript\",\"tags\":[\"getting-started\",\"nact\",\"javascript\",\"nodejs\"]},\"fields\":{\"slug\":\"/퍼시스턴트-쿼리\"}}},\"pathContext\":{\"slug\":\"/퍼시스턴트-쿼리\",\"programming_language\":\"javascript\",\"language\":\"ko_kr\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/ko-kr-lesson-javascript-퍼시스턴트-쿼리.json\n// module id = 444\n// module chunks = 274922230758086"],"sourceRoot":""}